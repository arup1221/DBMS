CREATE DATABASE MOVIE;
USE MOVIE;

CREATE TABLE ACTOR
( 	
	ACT_ID INT, 
	ACT_NAME VARCHAR(15), 
	ACT_GENDER CHAR,
	CONSTRAINT PK_AID PRIMARY KEY(ACT_ID)
);

CREATE TABLE DIRECTOR 
( 
	DIR_ID INT,
	DIR_NAME VARCHAR(20), 
	DIR_PHONE INT,
	CONSTRAINT PK_DID PRIMARY KEY(DIR_ID)
);

CREATE TABLE MOVIES
( 
	MOV_ID INT, 
	MOV_TITLE VARCHAR(25), 
	MOV_YEAR INT, 
	MOV_LANG VARCHAR(15), 
	DIR_ID INT,
	CONSTRAINT PK_MID PRIMARY KEY(MOV_ID),
	CONSTRAINT FK_DIR FOREIGN KEY(DIR_ID) REFERENCES DIRECTOR(DIR_ID) ON 
	DELETE CASCADE
);

CREATE TABLE MOVIE_CAST 
( 
	ACT_ID INT,
	MOV_ID INT, 
	ROLE VARCHAR(20),
	CONSTRAINT CPK_AM PRIMARY KEY(ACT_ID,MOV_ID),
	CONSTRAINT FK_MA FOREIGN KEY(ACT_ID) REFERENCES ACTOR(ACT_ID) ON DELETE CASCADE,
	CONSTRAINT FK_MD FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID) ON DELETE CASCADE
);


CREATE TABLE RATING 
( 
MOV_ID INT,
REV_STARS INT,
CONSTRAINT CPK_MCT PRIMARY KEY(MOV_ID,REV_STARS),
CONSTRAINT FK_MCD FOREIGN KEY(MOV_ID) REFERENCES MOVIES(MOV_ID) ON DELETE CASCADE
);

ALTER TABLE DIRECTOR
MODIFY COLUMN DIR_PHONE BIGINT;

INSERT INTO ACTOR (ACT_ID, ACT_NAME, ACT_GENDER) 
VALUES 
(10, 'AAYUSHMAN', 'M'),
(20, 'VARUNDHAWAN', 'M'),
(30, 'DEEPIKA', 'F'),
(40, 'CHRISPRATT', 'M'),
(50, 'ANTHONYPERKINS', 'M'),
(60, 'SHRADDHA', 'F');

INSERT INTO DIRECTOR (DIR_ID, DIR_NAME, DIR_PHONE) 
VALUES 
(11, 'SOOJITH', 1020304050),
(22, 'STEVEN SPIELBERG', 1122334455),
(33, 'DAVID', 9966443322),
(44, 'HITCH COCK', 1002003000),
(55, 'BANSALI', 9080706050),
(66, 'REMO', 9988776655);

INSERT INTO MOVIES (MOV_ID, MOV_TITLE, MOV_YEAR, MOV_LANG, DIR_ID) 
VALUES 
(111, 'ABCD2', 1999, 'HINDI', 66),
(222, 'PSYCHO', 1995, 'ENGLISH', 44),
(333, 'BAREILLI KI BURFI', 2017, 'HINDI', 11),
(444, 'RAMLEELA', 2015, 'HINDI', 55),
(555, 'MEIN TERA HERO', 2014, 'HINDI', 33),
(666, 'JURASSIC PARK', 2000, 'ENGLISH', 22),
(777, 'VICKY DONOR', 2011, 'HINDI', 11);

INSERT INTO MOVIE_CAST (ACT_ID, MOV_ID, ROLE) 
VALUES 
(10, 333, 'HERO'),
(20, 555, 'HERO'),
(30, 444, 'HEROINE'),
(40, 666, 'HERO'),
(50, 222, 'VILLAIN'),
(60, 111, 'HEROINE'),
(20, 111, 'HERO'),
(10, 777, 'HERO'),
(60, 333, 'HEROINE');

INSERT INTO RATING (MOV_ID, REV_STARS) 
VALUES 
(111, 3),
(111, 5),
(222, 2),
(222, 3),
(333, 0),
(444, 4),
(444, 5),
(555, 3),
(666, 2),
(777, 4);




-- QUERIES:
-- 1.List the titles of all movies directed by hitchcock.
SELECT M.MOV_TITLE
FROM MOVIES M,DIRECTOR D
WHERE D.DIR_ID=M.DIR_ID AND D.DIR_NAME='HITCH COCK';

-- 2.Find the movie names where one or more actors acted in two or more movies.
SELECT M.MOV_TITLE, A.ACT_NAME
FROM MOVIES M, ACTOR A, MOVIE_CAST M1
WHERE M.MOV_ID = M1.MOV_ID
    AND M1.ACT_ID = A.ACT_ID 
    AND M1.ACT_ID IN (
        SELECT ACT_ID
        FROM MOVIE_CAST 
        GROUP BY ACT_ID
        HAVING COUNT(MOV_ID) > 1
    );

-- 3.List all actors who acted in a movie before 2000 and also in a movie after 2015.(Use JOIN 
-- operator).
(SELECT A.ACT_NAME
FROM ACTOR A 
JOIN MOVIE_CAST M ON A.ACT_ID = M.ACT_ID 
JOIN MOVIES M1 ON M.MOV_ID = M1.MOV_ID
WHERE M1.MOV_YEAR < 2000)
INTERSECT
(SELECT A.ACT_NAME
FROM ACTOR A 
JOIN MOVIE_CAST M ON A.ACT_ID = M.ACT_ID 
JOIN MOVIES M1 ON M.MOV_ID = M1.MOV_ID
WHERE M1.MOV_YEAR >2015)

-- INTERSECT 

(SELECT A.ACT_NAME
FROM ACTOR A 
JOIN MOVIE_CAST M ON A.ACT_ID = M.ACT_ID 
JOIN MOVIES M1 ON M.MOV_ID = M1.MOV_ID
WHERE M1.MOV_YEAR > 2015);

-- 4.Find the title of movies and no. of stars for each movie that has atleast one rating and find the 
-- highest no. of stars that movie received. Sort the result by movie title.
SELECT M.MOV_TITLE, MAX(R.REV_STARS) 
FROM MOVIES M
JOIN RATING R ON M.MOV_ID = R.MOV_ID
WHERE M.MOV_ID IN (
    SELECT MOV_ID
    FROM RATING
    GROUP BY MOV_ID, REV_STARS
    HAVING REV_STARS > 0
)
GROUP BY M.MOV_TITLE 
ORDER BY M.MOV_TITLE;

-- 5.Update ratings of all movies directed by STEVENSPIELBERG.
UPDATE RATING 
SET REV_STARS = 5
WHERE MOV_ID IN (
    SELECT MOV_ID
    FROM MOVIES
    WHERE DIR_ID = (
        SELECT DIR_ID
        FROM DIRECTOR
        WHERE DIR_NAME = 'STEVEN SPIELBERG'
    )
);
 SELECT * FROM RATING;

