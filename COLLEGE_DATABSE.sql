CREATE DATABASE COLLEGE;
USE COLLEGE;

-- TABLE CREATION
CREATE TABLE STUDENT (
    USN CHAR(10),
    SNAME VARCHAR(20),
    ADDRESS VARCHAR(25),
    PHONE BIGINT(10),
    GENDER CHAR,
    CONSTRAINT A PRIMARY KEY(USN)
);

CREATE TABLE SEMSEC (
    SSID CHAR(2),
    SEM INT,
    SEC CHAR,
    CONSTRAINT B PRIMARY KEY(SSID),
    CONSTRAINT C_S CHECK(SEM BETWEEN 1 AND 8)
);

CREATE TABLE SUBJECT (
    SUBCODE VARCHAR(7),
    TITLE VARCHAR(20),
    SEM INT,
    CREDITS INT,
    CONSTRAINT G PRIMARY KEY(SUBCODE)
);

CREATE TABLE CLASS (
    USN CHAR(10),
    SSID CHAR(2),
    CONSTRAINT CPK_SS PRIMARY KEY(USN, SSID),
    CONSTRAINT FK_SN FOREIGN KEY(USN) REFERENCES STUDENT(USN) ON DELETE CASCADE,
    CONSTRAINT FK_SD FOREIGN KEY(SSID) REFERENCES SEMSEC(SSID) ON DELETE CASCADE
);

CREATE TABLE IAMARKS (
    USN CHAR(10),
    SUBCODE VARCHAR(7),
    SSID CHAR(2),
    TEST1 INT,
    TEST2 INT,
    TEST3 INT,
    FINALIA INT,
    CONSTRAINT CPK_USD PRIMARY KEY(USN, SUBCODE, SSID),
    CONSTRAINT FK_N FOREIGN KEY(USN) REFERENCES STUDENT(USN) ON DELETE CASCADE,
    CONSTRAINT FK_D FOREIGN KEY(SSID) REFERENCES SEMSEC(SSID) ON DELETE CASCADE,
    CONSTRAINT FK_C FOREIGN KEY(SUBCODE) REFERENCES SUBJECT(SUBCODE) ON DELETE CASCADE
);


-- INSERTION OF DATA 
INSERT INTO STUDENT (USN, SNAME, ADDRESS, PHONE, GENDER)
VALUES
    ('1MV17CS001', 'AASHISH', 'BANGALORE', 1020304050, 'M'),
    ('1MV17CS060', 'NAELA', 'MYSORE', 1122334455, 'F'),
    ('1MV17CS130', 'MILIND', 'JAMMU', 5060708090, 'M'),
    ('1MV16CS001', 'ABHIJITH', 'PUNE', 9988776655, 'M'),
    ('1MV16CS060', 'NIKITHA', 'HYDERABAD', 9080706050, 'F'),
    ('1MV16CS130', 'SANJANA', 'GUWAHATTI', 1234567890, 'F'),
    ('1MV15CS001', 'ANSHUMAN', 'PANAJI', 1112223334, 'M'),
    ('1MV15CS060', 'AMRUTHA', 'BANGALORE', 1002003004, 'F'),
    ('1MV15CS130', 'BHUVANESH', 'JAIPUR', 9008007006, 'M'),
    ('1MV14CS001', 'DEVAYANI', 'BANGALORE', 1000200030, 'F'),
    ('1MV14CS060', 'DAVID', 'KOCHI', 9000800070, 'M'),
    ('1MV14CS130', 'AISHWARYA', 'MUMBAI', 1000020000, 'F');
    
INSERT INTO SEMSEC (SSID, SEM, SEC)
VALUES
    ('2A', 2, 'A'),
    ('2B', 2, 'B'),
    ('2C', 2, 'C'),
    ('4A', 4, 'A'),
    ('4B', 4, 'B'),
    ('4C', 4, 'C'),
    ('6A', 6, 'A'),
    ('6B', 6, 'B'),
    ('6C', 6, 'C'),
    ('8A', 8, 'A'),
    ('8B', 8, 'B'),
    ('8C', 8, 'C');
    
INSERT INTO SUBJECT (SUBCODE, TITLE, SEM, CREDITS)
VALUES
    ('15CS21', 'M2', 2, 4),
    ('15PCD23', 'PCD', 2, 4),
    ('15CS42', 'SE', 4, 4),
    ('15CS44', 'MP', 4, 4),
    ('15CS64', 'CG', 6, 4),
    ('15CS62', 'USP', 6, 4),
    ('10CS81', 'SA', 8, 4),
    ('10CS842', 'ST', 8, 3);
    
INSERT INTO CLASS (USN, SSID)
VALUES
    ('1MV14CS001', '8A'),
    ('1MV14CS060', '8B'),
    ('1MV14CS130', '8C'),
    ('1MV15CS130', '6C'),
    ('1MV15CS060', '6B'),
    ('1MV15CS001', '6A'),
    ('1MV16CS001', '4A'),
    ('1MV16CS060', '4B'),
    ('1MV16CS130', '4C'),
    ('1MV17CS130', '2C'),
    ('1MV17CS060', '2B'),
    ('1MV17CS001', '2A');

INSERT INTO IAMARKS (USN, SUBCODE, SSID, TEST1, TEST2, TEST3)
VALUES
    ('1MV17CS001', '15CS21', '2A', 15, 14, 13),
    ('1MV17CS060', '15PCD23', '2B', 15, 15, 14),
    ('1MV17CS130', '15CS21', '2C', 11, 12, 13),
    ('1MV16CS001', '15CS42', '4A', 19, 19, 18),
    ('1MV16CS060', '15CS44', '4B', 5, 8, 5),
    ('1MV16CS130', '15CS42', '4C', 20, 20, 20),
    ('1MV15CS001', '15CS64', '6A', 12, 12, 12),
    ('1MV15CS060', '15CS62', '6B', 18, 19, 20),
    ('1MV15CS130', '15CS64', '6C', 8, 12, 11),
    ('1MV14CS001', '10CS81', '8A', 3, 11, 12),
    ('1MV14CS060', '10CS842', '8B', 0, 0, 7),
    ('1MV14CS130', '10CS81', '8C', 0, 0, 20);

-- Queries
-- 1.Make a list of all students details studying in 4
-- thsem c-sec. 
SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER 
FROM STUDENT S,CLASS C,SEMSEC SS
WHERE S.USN=C.USN AND
SS.SSID=C.SSID AND 
SS.SEM=4 AND 
SS.SEC='C';

-- 2.Compute the total no.of male and female students in each semester and in eachsec.
SELECT SS.SEM,SS.SEC,S.GENDER,COUNT(S.GENDER) 
FROM STUDENT S,SEMSEC SS,CLASS C
WHERE S.USN=C.USN AND SS.SSID=C.SSID 
GROUP BY SS.SEM,SS.SEC,S.GENDER;

-- 3.Create view of test1 marks of student 1MV15CS060 in all subjects.
CREATE VIEW TEST1_MARKS AS 
SELECT USN,SUBCODE,TEST1 
FROM IAMARKS
WHERE USN='1MV15CS060';
SELECT * FROM TEST1_MARKS;

-- 4.Calculate the final IA marks and update the corresponding table for all students.
UPDATE IAMARKS SET TEST1=19,TEST2=18,TEST3=17 WHERE USN='1MV14CS001';
UPDATE IAMARKS SET TEST1=11,TEST2=0,TEST3=14 WHERE USN='1MV14CS060';
UPDATE IAMARKS SET TEST1=10,TEST2=0,TEST3=7 WHERE USN='1MV14CS130';

DELIMITER #

CREATE PROCEDURE AVGMARKS()
BEGIN
    DECLARE C_A INT;
    DECLARE C_B INT;
    DECLARE C_C INT;
    DECLARE C_SUM INT;
    DECLARE C_AVG INT;
    DECLARE C_USN CHAR(10);
    DECLARE C_IAMARKS CURSOR FOR
        SELECT GREATEST(TEST1, TEST2), GREATEST(TEST1, TEST3), GREATEST(TEST2, TEST3), USN
        FROM IAMARKS
        WHERE FINALIA IS NULL;

    OPEN C_IAMARKS;
    LOOP
        FETCH C_IAMARKS INTO C_A, C_B, C_C, C_USN;
        IF C_A != C_B THEN
            SET C_SUM = C_A + C_B;
        ELSE
            SET C_SUM = C_A + C_C;
        END IF; 

        SET C_AVG = C_SUM / 2;

        
        UPDATE IAMARKS SET FINALIA = C_AVG WHERE USN = C_USN;
    END LOOP;

    CLOSE C_IAMARKS; 
END #

DELIMITER ;  

CALL AVGMARKS();
SELECT * FROM IAMARKS;

-- 5.Categorise students based on the following criteria
-- If FINALIA=17 to 20 then
-- CAT=’OUTSTANDING’ If FINALIA=12 to 16
-- then CAT=’AVERAGE’
-- If FINALIA=00 to 11 then CAT=’WEAK’
-- Give these details only for 8th semester A, B and C section students.
SELECT S.USN,S.SNAME,S.ADDRESS,S.PHONE,S.GENDER,
(
CASE
	WHEN IA.FINALIA BETWEEN 17 AND 20 THEN 'OUTSTANDING'
	WHEN IA.FINALIA BETWEEN 12 AND 16 THEN 'AVERAGE'
	ELSE 'WEAK'
	END
) AS CAT
FROM STUDENT S,SEMSEC SS,IAMARKS IA
WHERE S.USN=IA.USN AND
SS.SSID=IA.SSID AND
SS.SEM=8;









